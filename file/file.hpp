/**
 */
#ifndef UTILPP_FILE_H
#define UTILPP_FILE_H


////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>

#include <headers/error.h>

////////////////////////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Structs
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Typedefs
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Constructs
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////
namespace util
{
namespace file
{
/**
 * Returns a new line of the file.
 * Creates a new line.
 * If line is empty, returns '\0'
 * Return include the '\n'
 * If the file is end - return NULL
 */
extern char*
getLine(FILE *file);


/**
 * Abre um arquivo ou trata de um arquivo já aberto e insere todo o seu contéudo em uma string.
 * Ao final insere o character '\0'.
 * Ao final de todas as operações, o arquivo é fechado - fclose
 * O character EOF não é inserido no arranjo retornado.
 */
extern char*
toStr(const char *file_name);

extern char*
toStr(FILE *file);

}
}
#endif // UTILPP_FILE_H

////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////





